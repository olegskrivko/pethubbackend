# articles/views.py
# views.py
from rest_framework import viewsets
from rest_framework.permissions import IsAuthenticatedOrReadOnly, AllowAny

from .models import Article, Paragraph
from .serializers import ArticleSerializer, ParagraphSerializer


# ============================================================================
# ARTICLE MANAGEMENT VIEWS
# ============================================================================

class ArticleViewSet(viewsets.ModelViewSet):
    """
    ViewSet for managing article objects.
    Supports CRUD operations for articles with slug-based lookups.
    """
    queryset = Article.objects.all()
    serializer_class = ArticleSerializer
    permission_classes = [AllowAny]
    lookup_field = 'slug'  # Use slug for article lookups


class ParagraphViewSet(viewsets.ModelViewSet):
    """
    ViewSet for managing paragraph objects within articles.
    Supports CRUD operations for article paragraphs.
    """
    queryset = Paragraph.objects.all()
    serializer_class = ParagraphSerializer
    permission_classes = [AllowAny]


# from django.shortcuts import render
# from cloudinary.uploader import upload
# from PIL import Image
# import io

# # Create your views here.
# from .models import Paragraph

# def upload_view(request):
#     uploaded_file = request.FILES['image']
#     img = Image.open(uploaded_file)
#     img = img.resize((800, 600))

#     buffer = io.BytesIO()
#     img.save(buffer, format='JPEG')
#     buffer.seek(0)

#     result = upload(buffer, folder='articles/')

#     # Save to model (example)
#     paragraph = Paragraph.objects.create(
#         title='Generated paragraph',
#         article_id=1,  # You'll need to pass or fetch the correct Article ID
#         image_prompt='Generated by user',
#         image=result['secure_url'],
#         text='Text content',
#         order=0
#     )

#     return JsonResponse({'url': result['secure_url']})
